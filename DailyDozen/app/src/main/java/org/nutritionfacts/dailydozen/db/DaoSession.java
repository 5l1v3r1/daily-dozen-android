package org.nutritionfacts.dailydozen.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import org.nutritionfacts.dailydozen.db.DBUser;
import org.nutritionfacts.dailydozen.db.DBConsumption;
import org.nutritionfacts.dailydozen.db.DBDailyReport;

import org.nutritionfacts.dailydozen.db.DBUserDao;
import org.nutritionfacts.dailydozen.db.DBConsumptionDao;
import org.nutritionfacts.dailydozen.db.DBDailyReportDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dBUserDaoConfig;
    private final DaoConfig dBConsumptionDaoConfig;
    private final DaoConfig dBDailyReportDaoConfig;

    private final DBUserDao dBUserDao;
    private final DBConsumptionDao dBConsumptionDao;
    private final DBDailyReportDao dBDailyReportDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dBUserDaoConfig = daoConfigMap.get(DBUserDao.class).clone();
        dBUserDaoConfig.initIdentityScope(type);

        dBConsumptionDaoConfig = daoConfigMap.get(DBConsumptionDao.class).clone();
        dBConsumptionDaoConfig.initIdentityScope(type);

        dBDailyReportDaoConfig = daoConfigMap.get(DBDailyReportDao.class).clone();
        dBDailyReportDaoConfig.initIdentityScope(type);

        dBUserDao = new DBUserDao(dBUserDaoConfig, this);
        dBConsumptionDao = new DBConsumptionDao(dBConsumptionDaoConfig, this);
        dBDailyReportDao = new DBDailyReportDao(dBDailyReportDaoConfig, this);

        registerDao(DBUser.class, dBUserDao);
        registerDao(DBConsumption.class, dBConsumptionDao);
        registerDao(DBDailyReport.class, dBDailyReportDao);
    }
    
    public void clear() {
        dBUserDaoConfig.getIdentityScope().clear();
        dBConsumptionDaoConfig.getIdentityScope().clear();
        dBDailyReportDaoConfig.getIdentityScope().clear();
    }

    public DBUserDao getDBUserDao() {
        return dBUserDao;
    }

    public DBConsumptionDao getDBConsumptionDao() {
        return dBConsumptionDao;
    }

    public DBDailyReportDao getDBDailyReportDao() {
        return dBDailyReportDao;
    }

}
